name: patch
on:
  issues:
    types: [opened]

jobs:
  issue:
    name: Issue
    if: ${{ startsWith(github.event.issue.title, '[OCR patch]') }}
    runs-on: ubuntu-latest
    steps:
      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 8
          format: 'YYYY-MM-DD-HH-mm-ss'
      - name: Set UUID
        id: generate-uuid
        uses: filipstefansson/uuid-action@v1
        with:
          name: prefix${{ env.GITHUB_ACTION }}${{ env.GITHUB_RUN_NUMBER }}${{ github.sha }}${{ steps.time.outputs.time }}
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm install
      - id: get_safe_title
        run: echo ::set-output name=safe_title::$(npx ts-node --project ./tsconfig.build.json backend/gitworkflow-get-safe-title.ts)
        env:
          TITLE: ${{ github.event.issue.title }}
      - run: node_options="--max-old-space-size=8192" npm run init-parsed
      - run: node_options="--max-old-space-size=8192" npm run init-config
      - run: node_options="--max-old-space-size=8192" npm run build-indexes
      - id: get_archive_id
        run: echo ::set-output name=archive_id::$(npx ts-node --project ./tsconfig.build.json backend/gitworkflow-get-archive-id.ts)
        env:
          BODY: ${{ github.event.issue.body }}
          TITLE: ${{ github.event.issue.title }}

      - name: init subm ocr patch
        uses: actions/checkout@v4
        with:
          repository: 'banned-historical-archives/banned-historical-archives${{ steps.get_archive_id.outputs.archive_id }}'
          ref: 'ocr_patch'
          token: ${{ secrets.GH_PAT }}
          path: 'ocr_patch/archives${{ steps.get_archive_id.outputs.archive_id }}'

      - run: npx ts-node --project ./tsconfig.build.json backend/gitworkflow-patch.ts
        env:
          COMMIT_HASH: ${{ github.sha }}
          BODY: ${{ github.event.issue.body }}

      - run: git config --global http.postBuffer 2097152000
      - run: git config --global user.email "you@example.com"
      - run: git config --global user.name "Your Name"

      - name: Create Pull Request
        run: |
          cd ocr_patch/archives${{ steps.get_archive_id.outputs.archive_id }}
          git checkout -b feat/${{ steps.generate-uuid.outputs.uuid }}
          git add .
          git commit -m "feat: [OCR Patch]${{ steps.get_safe_title.outputs.safe_title}}"
          git push origin feat/${{ steps.generate-uuid.outputs.uuid }}
          curl \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GH_PAT }}" \
          https://api.github.com/repos/banned-historical-archives/banned-historical-archives${{ steps.get_archive_id.outputs.archive_id }}/pulls \
          -d "{
            \"title\": \"[OCR Patch]${{ steps.get_safe_title.outputs.safe_title}}\",
            \"body\": \"close https://github.com/banned-historical-archives/banned-historical-archives.github.io/issues/${{github.event.issue.number}}\",\"head\":\"feat/${{ steps.generate-uuid.outputs.uuid }}\",
            \"base\":\"ocr_patch\"}"
